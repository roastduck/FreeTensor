name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.CI }}
          submodules: true
          fetch-depth: 0
      - name: Build ffi module in Release
        run: |
          source /opt/spack/share/spack/setup-env.sh
          spack load gcc@8.4.0 cuda@10.2.89 python@3.8.6 py-pip@20.2 cudnn@8.0.4.30-10.2-linux-x64 cmake@3.18.4%gcc@7.5.0 intel-mkl@2020.3.279 java@11
          mkdir build
          cmake -B build -S . -DCMAKE_CXX_COMPILER=/mnt/ssd/spack/opt/spack/linux-ubuntu16.04-haswell/gcc-7.3.0/gcc-8.4.0-wxwjau3zh2vgh3gbw56byro6skfjuhkz/bin/g++ -DCMAKE_C_COMPILER=/mnt/ssd/spack/opt/spack/linux-ubuntu16.04-haswell/gcc-7.3.0/gcc-8.4.0-wxwjau3zh2vgh3gbw56byro6skfjuhkz/bin/gcc -DCMAKE_BUILD_TYPE=Release -DWITH_MKL=/mnt/ssd/spack/opt/spack/linux-ubuntu16.04-haswell/gcc-7.3.0/intel-mkl-2020.3.279-ejepo2yk7ihi5tcmg7s4fqne7l7u4fgk/mkl
          cmake --build build -j
      - name: Run PyTest
        run: |
          source /opt/spack/share/spack/setup-env.sh
          spack load gcc@8.4.0 cuda@10.2.89 python@3.8.6 py-pip@20.2 cudnn@8.0.4.30-10.2-linux-x64 cmake@3.18.4%gcc@7.5.0 intel-mkl@2020.3.279
          srun -N 1 -p V100 python -c 'import pkg_resources; print(pkg_resources)'
          PYTHONPATH=build:python:$PYTHONPATH srun -N 1 -p V100 pytest test

#include <omp.h>

#include <random.h>

namespace freetensor {

OpenMPRandomEngine::OpenMPRandomEngine(RNG::result_type seed) {
    // Seed sub-engines by random numbers generated by `rng0`. Please note that
    // we have to slightly alter the number before feed it in to a sub-engine,
    // because sub-engines and `rng0` are all instances of `RNG`. Otherwise,
    // sub-engine 0 will generate the 1st, 2nd, 3rd... numbers by RNG,
    // sub-engine 1 will generate the 2nd, 3rd, 4th... numbers by RNG, and they
    // are overlapped, which is not random
    RNG rng0(seed);
    int nthr = omp_get_max_threads();
    rngs_.reserve(nthr);
    for (int i = 0; i < nthr; i++) {
        rngs_.emplace_back((i + 1) * rng0());
    }
}

OpenMPRandomEngine::RNG::result_type OpenMPRandomEngine::operator()() {
    return rngs_.at(omp_get_thread_num())();
}

} // namespace freetensor
